<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Swift on Strongly Typed</title><link>https://dandylyons.github.io/blog/topics/swift/</link><description>Recent content in Swift on Strongly Typed</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 01 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://dandylyons.github.io/blog/topics/swift/index.xml" rel="self" type="application/rss+xml"/><item><title>Concrete and "Soft" Types in Swift</title><link>https://dandylyons.github.io/blog/swift-generics/concrete-types-swift/</link><pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate><guid>https://dandylyons.github.io/blog/swift-generics/concrete-types-swift/</guid><description>In our last article, we learned about how the generics system is deeply integrated into Swift at practically every level.</description></item><item><title>Explicit and Implicit Types in Swift</title><link>https://dandylyons.github.io/blog/swift-generics/explicit-types-swift/</link><pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate><guid>https://dandylyons.github.io/blog/swift-generics/explicit-types-swift/</guid><description>Generics are one of the most powerful features in Swift, yet they can often feel overwhelming, even for seasoned Swift developers.</description></item></channel></rss>